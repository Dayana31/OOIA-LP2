<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pbUsername.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>